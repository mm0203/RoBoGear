//=============================================================================
// Fade.cpp
//=============================================================================
// Author  松野 将之
//=============================================================================
#include "fade.h"
#include <System/Sound/Sound.h>

#define FADE_RATE	0.02f

//=============================================================================
// 
// コンストラクタ
// 
//=============================================================================
Fade::Fade()
{
	m_fAlpha = 0.0f;
	m_nFade = FADE_IN;
	m_pNextScene = nullptr;
	m_FadeCount = 0;
	m_nTexNo = 0;
}

//=============================================================================
// 
// 初期化処理
// 
//=============================================================================
void Fade::Init()
{
	m_FadePolygon.SetSize(SCREEN_WIDTH, SCREEN_HEIGHT);
	m_FadePolygon.SetTex(nullptr);
	m_FadePolygon.SetColor(0.0f,0.0f,0.0f);	// 画面を黒色に

	m_FadeTexture.Init();
}

//=============================================================================
// 
// 終了処理
// 
//=============================================================================
void Fade::Uninit()
{
	m_FadeTexture.Uninit();
}

//=============================================================================
// 
// 更新処理
// 
//=============================================================================
void Fade::Update()
{
	// 次のシーンが設定されていなければスキップ
	if (m_nFade == FADE_NONE)	return;
	//if (!m_pNextScene)	return;

	m_FadePolygon.SetAlpha(m_fAlpha);
	m_FadeTexture.Fade(m_fAlpha);

	// フェードイン処理
	if (m_nFade == FADE_OUT) 
	{
		// 徐々にフェード
		m_fAlpha += FADE_RATE;
		if (m_fAlpha >= 1.0f) 
		{
			// フェードイン処理に切替
			m_fAlpha = 1.0f;
			m_nFade = FADE_IN;

			// シーン切替
			SceneManager::GetInstance().EndFade(m_pNextScene);
		}
		CSound::SetVolume(1.0f - m_fAlpha);
		return;
	}

	// フェードアウト処理
	m_fAlpha -= FADE_RATE;

	if (m_fAlpha <= 0.0f) 
	{
		// フェード処理終了
		m_fAlpha = 0.0f;
		EndFade();
		m_nFade = FADE_NONE;
	}
	CSound::SetVolume(1.0f - m_fAlpha);
}

//=============================================================================
// 
// 描画処理
// 
//=============================================================================
void Fade::Draw()
{
	m_FadePolygon.Draw();
	m_FadeTexture.Draw();
}

//=============================================================================
// 
// フェードアウト開始
// 
//=============================================================================
void Fade::SetFadeOut(Scene* sceneNext)
{
	if (m_nFade != FADE_OUT)
	{
		m_nFade = FADE_OUT;
		m_pNextScene = sceneNext;
	}
}

//=============================================================================
// 
// フェードアウト開始
// 
//=============================================================================
void Fade::EndFade()
{
	m_pNextScene = nullptr;

}