//=============================================================================
// GameStep.cpp
//=============================================================================
// Author  松野 将之
//=============================================================================
#include "GameStep.h"
#include <Manager/GameManager.h>

//=============================================================================
// 
// 無名名前空間
// 
//=============================================================================
namespace
{
	const auto NumberFrame = L"data/texture/UI/gear.png";
	const float RoationSpeed = 0.5f; // 回転速度
}

//=============================================================================
// 
// コンストラクタ
// 
//=============================================================================
CGameStep::CGameStep()
{
	m_fAngle = 0.0f;
}

//=============================================================================
// 
// 初期化処理
// 
//=============================================================================
void CGameStep::Init()
{
	m_TextureFades.resize(eGameStepMax);

	// 歩数初期化
	m_Number.Init();

	// 歩数フレーム
	m_Polygon->SetSize(220.0f, 220.0f);
	m_Polygon->SetPosition(525.0f, 235.0f);
	m_Polygon->LoadTexture(NumberFrame);
}

//=============================================================================
// 
// 終了処理
// 
//=============================================================================
void CGameStep::Uninit()
{
	m_Number.Uninit();
}

//=============================================================================
// 
// 更新処理
// 
//=============================================================================
void CGameStep::Update()
{
	m_Number.Update();

	// 歯車の回転
	m_fAngle -= RoationSpeed;
	m_Polygon->SetAngle(m_fAngle);
}

//=============================================================================
// 
// 描画処理
// 
//=============================================================================
void CGameStep::Draw()
{
	// 歩数フレーム描画
	m_Polygon->Draw();

	// 歩数描画
	int m_nStepCnt = CGameManager::GetStep();
	XMFLOAT2 pos = XMFLOAT2(565.0f, 235.0f);
	m_Number.Draw(m_nStepCnt, pos);
}

//=============================================================================
// 
// フェードアウト
// 
//=============================================================================
void CGameStep::FadeOut()
{
	m_TextureFades[eGameStep].FadeOut(m_Number.GetPolygon());
	m_TextureFades[eGameStepFrame].FadeOut(m_Polygon);
}